{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true
    },
    "tasks": [
        {
            "label": "lambda_deploy",
            "type": "shell",
            "command": "/usr/bin/aws",
            "args": [
                "lambda",
                "update-function-code",
                "--function-name",
                "${workspaceFolderBasename}",
                "--zip-file",
                "fileb://${workspaceFolderBasenmae}/build/${workspaceFolderBasename}.zip"
            ],
            "problemMatcher": []
        },
        {
            "label": "clean",
            "type": "shell",
            "command": "find",
            "args": [
                ".",
                "-path",
                "*build/*",
                "-delete"
            ],
            "group": "build",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
        },
        {
            "label": "zip_lambda",
            "type": "shell",
            "command": "zip -r9 ${workspaceFolderBasename}.zip *",
            "group": "build",
            "dependsOn": [
                "build"
            ],
            "options": {
                "cwd": "${workspaceFolderBasename}/build"
            },
            "problemMatcher": []
        },
        {
            "label": "build",
            "type": "shell",
            "command": "grep -i -P '(?<=CodeUri: ).+' -o ./template.yaml | xargs  -I '{}' bash -c 'pipenv run pip install -r requirements.txt -t {} --upgrade && cp ./{}../*.py {}'",
            "group": "build",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
        },
        {
            "label": "sam_package",
            "type": "shell",
            "command": "pipenv run sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket lambchops",
            "group": "build",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
        },
        {
            "label": "sam_deploy",
            "type": "shell",
            "command": "pipenv run sam deploy --template-file packaged.yaml --stack-name lambda-app --capabilities CAPABILITY_IAM",
            "group": "build",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "dependsOn": [
                "sam_package"
            ]
        },
        {
            "label": "sam_start",
            "type": "shell",
            "command": "pipenv run sam local start-api -n ${workspaceFolder}/.env.json",
            "group": "build",
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            },
        },
    ]
}
